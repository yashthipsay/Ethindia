{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useEffect, useRef } from 'react';\nimport MutateObserver from '@rc-component/mutate-observer';\nimport { getStyleStr, getPixelRatio, rotateWatermark, reRendering } from './utils';\n/**\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\n * Only alternate layout is currently supported\n */\nconst BaseSize = 2;\nconst FontGap = 3;\nconst Watermark = props => {\n  var _a, _b;\n  const {\n    /**\n     * The antd content layer zIndex is basically below 10\n     * https://github.com/ant-design/ant-design/blob/6192403b2ce517c017f9e58a32d58774921c10cd/components/style/themes/default.less#L335\n     */\n    zIndex = 9,\n    rotate = -22,\n    width,\n    height,\n    image,\n    content,\n    font = {},\n    style,\n    className,\n    gap = [100, 100],\n    offset,\n    children\n  } = props;\n  const {\n    color = 'rgba(0,0,0,.15)',\n    fontSize = 16,\n    fontWeight = 'normal',\n    fontStyle = 'normal',\n    fontFamily = 'sans-serif'\n  } = font;\n  const [gapX, gapY] = gap;\n  const gapXCenter = gapX / 2;\n  const gapYCenter = gapY / 2;\n  const offsetLeft = (_a = offset === null || offset === void 0 ? void 0 : offset[0]) !== null && _a !== void 0 ? _a : gapXCenter;\n  const offsetTop = (_b = offset === null || offset === void 0 ? void 0 : offset[1]) !== null && _b !== void 0 ? _b : gapYCenter;\n  const getMarkStyle = () => {\n    const markStyle = {\n      zIndex,\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundRepeat: 'repeat'\n    };\n    /** Calculate the style of the offset */\n    let positionLeft = offsetLeft - gapXCenter;\n    let positionTop = offsetTop - gapYCenter;\n    if (positionLeft > 0) {\n      markStyle.left = `${positionLeft}px`;\n      markStyle.width = `calc(100% - ${positionLeft}px)`;\n      positionLeft = 0;\n    }\n    if (positionTop > 0) {\n      markStyle.top = `${positionTop}px`;\n      markStyle.height = `calc(100% - ${positionTop}px)`;\n      positionTop = 0;\n    }\n    markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`;\n    return markStyle;\n  };\n  const containerRef = useRef(null);\n  const watermarkRef = useRef();\n  const stopObservation = useRef(false);\n  const destroyWatermark = () => {\n    if (watermarkRef.current) {\n      watermarkRef.current.remove();\n      watermarkRef.current = undefined;\n    }\n  };\n  const appendWatermark = (base64Url, markWidth) => {\n    var _a;\n    if (containerRef.current && watermarkRef.current) {\n      stopObservation.current = true;\n      watermarkRef.current.setAttribute('style', getStyleStr(Object.assign(Object.assign({}, getMarkStyle()), {\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${(gapX + markWidth) * BaseSize}px`\n      })));\n      (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.append(watermarkRef.current);\n      // Delayed execution\n      setTimeout(() => {\n        stopObservation.current = false;\n      });\n    }\n  };\n  /**\n   * Get the width and height of the watermark. The default values are as follows\n   * Image: [120, 64]; Content: It's calculated by content;\n   */\n  const getMarkSize = ctx => {\n    let defaultWidth = 120;\n    let defaultHeight = 64;\n    if (!image && ctx.measureText) {\n      ctx.font = `${Number(fontSize)}px ${fontFamily}`;\n      const contents = Array.isArray(content) ? content : [content];\n      const widths = contents.map(item => ctx.measureText(item).width);\n      defaultWidth = Math.ceil(Math.max.apply(Math, _toConsumableArray(widths)));\n      defaultHeight = Number(fontSize) * contents.length + (contents.length - 1) * FontGap;\n    }\n    return [width !== null && width !== void 0 ? width : defaultWidth, height !== null && height !== void 0 ? height : defaultHeight];\n  };\n  const fillTexts = (ctx, drawX, drawY, drawWidth, drawHeight) => {\n    const ratio = getPixelRatio();\n    const mergedFontSize = Number(fontSize) * ratio;\n    ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${drawHeight}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    ctx.translate(drawWidth / 2, 0);\n    const contents = Array.isArray(content) ? content : [content];\n    contents === null || contents === void 0 ? void 0 : contents.forEach((item, index) => {\n      ctx.fillText(item !== null && item !== void 0 ? item : '', drawX, drawY + index * (mergedFontSize + FontGap * ratio));\n    });\n  };\n  const renderWatermark = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      if (!watermarkRef.current) {\n        watermarkRef.current = document.createElement('div');\n      }\n      const ratio = getPixelRatio();\n      const [markWidth, markHeight] = getMarkSize(ctx);\n      const canvasWidth = (gapX + markWidth) * ratio;\n      const canvasHeight = (gapY + markHeight) * ratio;\n      canvas.setAttribute('width', `${canvasWidth * BaseSize}px`);\n      canvas.setAttribute('height', `${canvasHeight * BaseSize}px`);\n      const drawX = gapX * ratio / 2;\n      const drawY = gapY * ratio / 2;\n      const drawWidth = markWidth * ratio;\n      const drawHeight = markHeight * ratio;\n      const rotateX = (drawWidth + gapX * ratio) / 2;\n      const rotateY = (drawHeight + gapY * ratio) / 2;\n      /** Alternate drawing parameters */\n      const alternateDrawX = drawX + canvasWidth;\n      const alternateDrawY = drawY + canvasHeight;\n      const alternateRotateX = rotateX + canvasWidth;\n      const alternateRotateY = rotateY + canvasHeight;\n      ctx.save();\n      rotateWatermark(ctx, rotateX, rotateY, rotate);\n      if (image) {\n        const img = new Image();\n        img.onload = () => {\n          ctx.drawImage(img, drawX, drawY, drawWidth, drawHeight);\n          /** Draw interleaved pictures after rotation */\n          ctx.restore();\n          rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n          ctx.drawImage(img, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n          appendWatermark(canvas.toDataURL(), markWidth);\n        };\n        img.crossOrigin = 'anonymous';\n        img.referrerPolicy = 'no-referrer';\n        img.src = image;\n      } else {\n        fillTexts(ctx, drawX, drawY, drawWidth, drawHeight);\n        /** Fill the interleaved text after rotation */\n        ctx.restore();\n        rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n        fillTexts(ctx, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n        appendWatermark(canvas.toDataURL(), markWidth);\n      }\n    }\n  };\n  const onMutate = mutations => {\n    if (stopObservation.current) {\n      return;\n    }\n    mutations.forEach(mutation => {\n      if (reRendering(mutation, watermarkRef.current)) {\n        destroyWatermark();\n        renderWatermark();\n      }\n    });\n  };\n  useEffect(renderWatermark, [rotate, zIndex, width, height, image, content, color, fontSize, fontWeight, fontStyle, fontFamily, gapX, gapY, offsetLeft, offsetTop]);\n  return /*#__PURE__*/React.createElement(MutateObserver, {\n    onMutate: onMutate\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: className,\n    style: Object.assign({\n      position: 'relative'\n    }, style)\n  }, children));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Watermark.displayName = 'Watermark';\n}\nexport default Watermark;","map":{"version":3,"names":["_toConsumableArray","React","useEffect","useRef","MutateObserver","getStyleStr","getPixelRatio","rotateWatermark","reRendering","BaseSize","FontGap","Watermark","props","_a","_b","zIndex","rotate","width","height","image","content","font","style","className","gap","offset","children","color","fontSize","fontWeight","fontStyle","fontFamily","gapX","gapY","gapXCenter","gapYCenter","offsetLeft","offsetTop","getMarkStyle","markStyle","position","left","top","pointerEvents","backgroundRepeat","positionLeft","positionTop","backgroundPosition","containerRef","watermarkRef","stopObservation","destroyWatermark","current","remove","undefined","appendWatermark","base64Url","markWidth","setAttribute","Object","assign","backgroundImage","backgroundSize","append","setTimeout","getMarkSize","ctx","defaultWidth","defaultHeight","measureText","Number","contents","Array","isArray","widths","map","item","Math","ceil","max","apply","length","fillTexts","drawX","drawY","drawWidth","drawHeight","ratio","mergedFontSize","fillStyle","textAlign","textBaseline","translate","forEach","index","fillText","renderWatermark","canvas","document","createElement","getContext","markHeight","canvasWidth","canvasHeight","rotateX","rotateY","alternateDrawX","alternateDrawY","alternateRotateX","alternateRotateY","save","img","Image","onload","drawImage","restore","toDataURL","crossOrigin","referrerPolicy","src","onMutate","mutations","mutation","ref","process","env","NODE_ENV","displayName"],"sources":["/root/Ethindia/dex/node_modules/antd/es/watermark/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useEffect, useRef } from 'react';\nimport MutateObserver from '@rc-component/mutate-observer';\nimport { getStyleStr, getPixelRatio, rotateWatermark, reRendering } from './utils';\n/**\n * Base size of the canvas, 1 for parallel layout and 2 for alternate layout\n * Only alternate layout is currently supported\n */\nconst BaseSize = 2;\nconst FontGap = 3;\nconst Watermark = props => {\n  var _a, _b;\n  const {\n    /**\n     * The antd content layer zIndex is basically below 10\n     * https://github.com/ant-design/ant-design/blob/6192403b2ce517c017f9e58a32d58774921c10cd/components/style/themes/default.less#L335\n     */\n    zIndex = 9,\n    rotate = -22,\n    width,\n    height,\n    image,\n    content,\n    font = {},\n    style,\n    className,\n    gap = [100, 100],\n    offset,\n    children\n  } = props;\n  const {\n    color = 'rgba(0,0,0,.15)',\n    fontSize = 16,\n    fontWeight = 'normal',\n    fontStyle = 'normal',\n    fontFamily = 'sans-serif'\n  } = font;\n  const [gapX, gapY] = gap;\n  const gapXCenter = gapX / 2;\n  const gapYCenter = gapY / 2;\n  const offsetLeft = (_a = offset === null || offset === void 0 ? void 0 : offset[0]) !== null && _a !== void 0 ? _a : gapXCenter;\n  const offsetTop = (_b = offset === null || offset === void 0 ? void 0 : offset[1]) !== null && _b !== void 0 ? _b : gapYCenter;\n  const getMarkStyle = () => {\n    const markStyle = {\n      zIndex,\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      pointerEvents: 'none',\n      backgroundRepeat: 'repeat'\n    };\n    /** Calculate the style of the offset */\n    let positionLeft = offsetLeft - gapXCenter;\n    let positionTop = offsetTop - gapYCenter;\n    if (positionLeft > 0) {\n      markStyle.left = `${positionLeft}px`;\n      markStyle.width = `calc(100% - ${positionLeft}px)`;\n      positionLeft = 0;\n    }\n    if (positionTop > 0) {\n      markStyle.top = `${positionTop}px`;\n      markStyle.height = `calc(100% - ${positionTop}px)`;\n      positionTop = 0;\n    }\n    markStyle.backgroundPosition = `${positionLeft}px ${positionTop}px`;\n    return markStyle;\n  };\n  const containerRef = useRef(null);\n  const watermarkRef = useRef();\n  const stopObservation = useRef(false);\n  const destroyWatermark = () => {\n    if (watermarkRef.current) {\n      watermarkRef.current.remove();\n      watermarkRef.current = undefined;\n    }\n  };\n  const appendWatermark = (base64Url, markWidth) => {\n    var _a;\n    if (containerRef.current && watermarkRef.current) {\n      stopObservation.current = true;\n      watermarkRef.current.setAttribute('style', getStyleStr(Object.assign(Object.assign({}, getMarkStyle()), {\n        backgroundImage: `url('${base64Url}')`,\n        backgroundSize: `${(gapX + markWidth) * BaseSize}px`\n      })));\n      (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.append(watermarkRef.current);\n      // Delayed execution\n      setTimeout(() => {\n        stopObservation.current = false;\n      });\n    }\n  };\n  /**\n   * Get the width and height of the watermark. The default values are as follows\n   * Image: [120, 64]; Content: It's calculated by content;\n   */\n  const getMarkSize = ctx => {\n    let defaultWidth = 120;\n    let defaultHeight = 64;\n    if (!image && ctx.measureText) {\n      ctx.font = `${Number(fontSize)}px ${fontFamily}`;\n      const contents = Array.isArray(content) ? content : [content];\n      const widths = contents.map(item => ctx.measureText(item).width);\n      defaultWidth = Math.ceil(Math.max.apply(Math, _toConsumableArray(widths)));\n      defaultHeight = Number(fontSize) * contents.length + (contents.length - 1) * FontGap;\n    }\n    return [width !== null && width !== void 0 ? width : defaultWidth, height !== null && height !== void 0 ? height : defaultHeight];\n  };\n  const fillTexts = (ctx, drawX, drawY, drawWidth, drawHeight) => {\n    const ratio = getPixelRatio();\n    const mergedFontSize = Number(fontSize) * ratio;\n    ctx.font = `${fontStyle} normal ${fontWeight} ${mergedFontSize}px/${drawHeight}px ${fontFamily}`;\n    ctx.fillStyle = color;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'top';\n    ctx.translate(drawWidth / 2, 0);\n    const contents = Array.isArray(content) ? content : [content];\n    contents === null || contents === void 0 ? void 0 : contents.forEach((item, index) => {\n      ctx.fillText(item !== null && item !== void 0 ? item : '', drawX, drawY + index * (mergedFontSize + FontGap * ratio));\n    });\n  };\n  const renderWatermark = () => {\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    if (ctx) {\n      if (!watermarkRef.current) {\n        watermarkRef.current = document.createElement('div');\n      }\n      const ratio = getPixelRatio();\n      const [markWidth, markHeight] = getMarkSize(ctx);\n      const canvasWidth = (gapX + markWidth) * ratio;\n      const canvasHeight = (gapY + markHeight) * ratio;\n      canvas.setAttribute('width', `${canvasWidth * BaseSize}px`);\n      canvas.setAttribute('height', `${canvasHeight * BaseSize}px`);\n      const drawX = gapX * ratio / 2;\n      const drawY = gapY * ratio / 2;\n      const drawWidth = markWidth * ratio;\n      const drawHeight = markHeight * ratio;\n      const rotateX = (drawWidth + gapX * ratio) / 2;\n      const rotateY = (drawHeight + gapY * ratio) / 2;\n      /** Alternate drawing parameters */\n      const alternateDrawX = drawX + canvasWidth;\n      const alternateDrawY = drawY + canvasHeight;\n      const alternateRotateX = rotateX + canvasWidth;\n      const alternateRotateY = rotateY + canvasHeight;\n      ctx.save();\n      rotateWatermark(ctx, rotateX, rotateY, rotate);\n      if (image) {\n        const img = new Image();\n        img.onload = () => {\n          ctx.drawImage(img, drawX, drawY, drawWidth, drawHeight);\n          /** Draw interleaved pictures after rotation */\n          ctx.restore();\n          rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n          ctx.drawImage(img, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n          appendWatermark(canvas.toDataURL(), markWidth);\n        };\n        img.crossOrigin = 'anonymous';\n        img.referrerPolicy = 'no-referrer';\n        img.src = image;\n      } else {\n        fillTexts(ctx, drawX, drawY, drawWidth, drawHeight);\n        /** Fill the interleaved text after rotation */\n        ctx.restore();\n        rotateWatermark(ctx, alternateRotateX, alternateRotateY, rotate);\n        fillTexts(ctx, alternateDrawX, alternateDrawY, drawWidth, drawHeight);\n        appendWatermark(canvas.toDataURL(), markWidth);\n      }\n    }\n  };\n  const onMutate = mutations => {\n    if (stopObservation.current) {\n      return;\n    }\n    mutations.forEach(mutation => {\n      if (reRendering(mutation, watermarkRef.current)) {\n        destroyWatermark();\n        renderWatermark();\n      }\n    });\n  };\n  useEffect(renderWatermark, [rotate, zIndex, width, height, image, content, color, fontSize, fontWeight, fontStyle, fontFamily, gapX, gapY, offsetLeft, offsetTop]);\n  return /*#__PURE__*/React.createElement(MutateObserver, {\n    onMutate: onMutate\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: containerRef,\n    className: className,\n    style: Object.assign({\n      position: 'relative'\n    }, style)\n  }, children));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Watermark.displayName = 'Watermark';\n}\nexport default Watermark;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}